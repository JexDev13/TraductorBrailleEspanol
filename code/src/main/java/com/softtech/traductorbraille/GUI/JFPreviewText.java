package com.softtech.traductorbraille.GUI;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/**
 *
 * @author Isma2
 */
public class JFPreviewText extends javax.swing.JFrame {

    String texto;
    /**
     * Creates new form JFPreviewText
     */
    public JFPreviewText(String texto) {
        initComponents();
        this.texto = texto;
        previewText(texto);
    }
    
    public void previewText(String content) {
        // Create a custom JPanel to display the content
        JPanel contentPanel = new JPanel() {
            @Override
            protected void paintComponent(Graphics graphics) {
                super.paintComponent(graphics);
                Graphics2D g2d = (Graphics2D) graphics;
                g2d.setFont(new Font("SansSerif", Font.PLAIN, 32));
                g2d.setColor(Color.BLACK);
                int lineHeight = g2d.getFontMetrics().getHeight();
                int y1 = lineHeight; // Start below the top margin
                int margin = 50;
                for (String line : content.split("\n")) {
                    String[] words = line.split(" ");
                    String currentLine = words[0];
                    for (int i = 1; i < words.length; i++) {
                        if (g2d.getFontMetrics().stringWidth(currentLine + " " + words[i]) < getWidth() - 2 * margin) {
                            currentLine += " " + words[i];
                        } else {
                            g2d.drawString(currentLine, margin, y1);
                            currentLine = words[i];
                            y1 += lineHeight;
                        }
                    }
                    g2d.drawString(currentLine, margin, y1);
                    y1 += lineHeight;
                }
            }

            @Override
            public Dimension getPreferredSize() {
                return new Dimension(424, 436); // Default preferred size
            }
        };

        // Set the background color to white
        contentPanel.setBackground(Color.WHITE);

        // Set the preferred size of the content panel
        contentPanel.setPreferredSize(new Dimension(424, 436));

        // Update the preview panel
        JPPreview.removeAll();
        JPPreview.setLayout(new BorderLayout());
        JPPreview.add(new JScrollPane(contentPanel, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED), BorderLayout.CENTER);
        JPPreview.revalidate();
        JPPreview.repaint();
    }
    
    public void printText(String content) throws PrinterException {
        PrinterJob job = PrinterJob.getPrinterJob();
        job.setPrintable((Graphics graphics, PageFormat pageFormat, int pageIndex) -> {
            if (pageIndex > 0) {
                return NO_SUCH_PAGE;
            }
            Graphics2D g2d = (Graphics2D) graphics;
            g2d.translate(pageFormat.getImageableX(), pageFormat.getImageableY());
            g2d.setFont(new Font("SansSerif", Font.PLAIN, 32));
            g2d.setColor(Color.BLACK);
            int lineHeight = g2d.getFontMetrics().getHeight();
            int y1 = 0;
            int margin = 50;
            for (String line : content.split("\n")) {
                String[] words = line.split(" ");
                String currentLine = words[0];
                for (int i = 1; i < words.length; i++) {
                    if (g2d.getFontMetrics().stringWidth(currentLine + " " + words[i]) < pageFormat.getImageableWidth() - 2 * margin) {
                        currentLine += " " + words[i];
                    } else {
                        y1 += lineHeight;
                        g2d.drawString(currentLine, margin, y1);
                        currentLine = words[i];
                    }
                }
                y1 += lineHeight;
                g2d.drawString(currentLine, margin, y1);
            }
            return PAGE_EXISTS;
        });

        // Show the print dialog
        if (job.printDialog()) {
            job.print();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBImprimir = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();
        JPPreview = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jBImprimir.setText("Imprimir");
        jBImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBImprimirActionPerformed(evt);
            }
        });

        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JPPreviewLayout = new javax.swing.GroupLayout(JPPreview);
        JPPreview.setLayout(JPPreviewLayout);
        JPPreviewLayout.setHorizontalGroup(
            JPPreviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 424, Short.MAX_VALUE)
        );
        JPPreviewLayout.setVerticalGroup(
            JPPreviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 436, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Previsualizar impresi√≥n espejo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBImprimir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBCancelar))
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(JPPreview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(JPPreview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBImprimir)
                    .addComponent(jBCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBImprimirActionPerformed
        try {
            printText(texto);
        } catch (PrinterException ex) {
            Logger.getLogger(JFPreviewText.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBImprimirActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPPreview;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBImprimir;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
